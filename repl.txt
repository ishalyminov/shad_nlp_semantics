S::(B)(A) -> NP:=A VP:=B
S::(B)(A) -> NPWH:=B AUX S:=A
S::(\z.B) -> AUX S:=B
S::(B)(A) -> NPWH:=B VP:=A

# sentence with a gap in verb phrase
S/GAP::(B)(A) -> NP:=A VP/GAP:=B

# HOW MANY-questions
S::(\z.Count(z))(A) -> NPWH/CNT VP:=A
S::(\w.Count(w))(\z.B) -> NPWH/CNT AUX S/GAP:=B
S::(\w.Count(w))(\x.Is(x,B)) -> NPWH/CNT AUX N:=B

# HOW LONG-questions
S::(\z.A) -> NPWH/TIME AUX S/GAP:=A

# IS-questions

S::(\z.(\y.\x.Is(x,y))(A)(B)) -> NPWH/IS NP:=B NP:=A

S::(\z.S) !-> S/NP/Z:=S
S/NP/Z::(B)(A) -> NP:=A VP/Z:=B

NP::(A) -> N:=A
NP -> NP:=A AND NP:=A
NP::(A) -> D N:=A

PP::(A) -> P NP:=A

VP::(B)(A) -> V/TRANS:=B NP:=A
VP::(B)(A) -> V/TRANS:=B PP:=A
VP::(B)(A) -> V/INTRANS:=B NP:=A
VP::(B)(A) -> V/INTRANS:=B PP:=A
VP::(\x.A(x)&&B(x)) -> VP:=A AND VP:=B
VP::(\x.A(x)||B(x)) -> VP:=A OR VP:=B
VP/Z::(B)(z) -> V/INTRANS:=B
VP/Z::(B)(z) -> V/TRANS:=B P
VP/Z::(\x.A(x)&&B(x)) -> VP/Z:=A AND VP/Z:=B

VP/GAP::(B)(z) -> V/TRANS:=B
VP/GAP::(B)(z) -> V/TRANS:=B P

V/TRANS::(\y.\x.Consists(x,y)) -> consists
V/TRANS::(\y.\x.Consists(x,y)) -> consist
V/TRANS::(\y.\x.Is(x,y)) -> is
V/TRANS::(\y.\x.Takes(x,y)) -> takes
V/TRANS::(\y.\x.Takes(x,y)) -> take

NPWH::(\P.P) -> what
NPWH/CNT -> how many
NPWH/CNT -> NPWH/CNT NP
NPWH/INCNT -> how much
NPWH/IS -> is
NPWH/TIME -> how long

N::Pizza -> pizza
N::Salat -> salat
N::Lasagna -> lasagna
N::Cheese -> cheese
N::Tomato -> tomato
N::Vegetarian -> vegetarian

N::Kosher -> kosher
N -> dishes
N -> ingredients

N::Hour -> hour
N::Minute -> minute
N::Eternity -> eternity

P -> of
AND -> and

D -> a
D -> an

AUX -> do
AUX -> does
AUX -> are
